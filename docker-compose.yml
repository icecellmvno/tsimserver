version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: tsimserver_postgres
    environment:
      POSTGRES_DB: tsimserver
      POSTGRES_USER: tsimserver
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - tsimserver_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: tsimserver_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tsimserver_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # RabbitMQ Message Queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: tsimserver_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - tsimserver_network
    restart: unless-stopped

  # TsimServer Application
  tsimserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tsimserver_app
    ports:
      - "8080:8080"
    environment:
      # Database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=tsimserver
      - DB_PASSWORD=password
      - DB_NAME=tsimserver
      - DB_SSLMODE=disable
      
      # Redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      
      # RabbitMQ
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      
      # Server
      - PORT=8080
      - HOST=0.0.0.0
      
      # JWT
      - JWT_SECRET=tsimserver_jwt_secret_key_2024
      - JWT_EXPIRE_HOURS=24
      
      # Logging
      - LOG_LEVEL=info
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - tsimserver_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: tsimserver_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - tsimserver
    networks:
      - tsimserver_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  tsimserver_network:
    driver: bridge 